<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Rockwinder`s Blog</title>
    <link>https://rockwinder.github.io/post/</link>
    <description>Recent content in Posts on Rockwinder`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 31 Oct 2020 15:04:45 +0800</lastBuildDate><atom:link href="https://rockwinder.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Redis为什么这么快</title>
      <link>https://rockwinder.github.io/post/why_redis_so_soft/</link>
      <pubDate>Sat, 31 Oct 2020 15:04:45 +0800</pubDate>
      
      <guid>https://rockwinder.github.io/post/why_redis_so_soft/</guid>
      <description>作为一名服务端工程师，工作中你肯定和 Redis 打过交道。Redis 为什么快，这点想必你也知道，至少为了面试也做过准备。很多人知道 Redis 快仅仅因为它是基于</description>
    </item>
    
    <item>
      <title>进制转换</title>
      <link>https://rockwinder.github.io/post/hexadecimal_conversion/</link>
      <pubDate>Thu, 23 Jul 2020 20:48:34 +0700</pubDate>
      
      <guid>https://rockwinder.github.io/post/hexadecimal_conversion/</guid>
      <description>二进制 → 十进制 二进制数从低位到高位（即从右往左）计算，第0位的权值是2的0次方，第1位的权值是2的1次方，第2位的权值是2的2次方，依次递增</description>
    </item>
    
    <item>
      <title>Apache Traffic Server技术介绍</title>
      <link>https://rockwinder.github.io/post/apache_traffic_server/</link>
      <pubDate>Tue, 21 Jul 2020 14:01:40 +0700</pubDate>
      
      <guid>https://rockwinder.github.io/post/apache_traffic_server/</guid>
      <description>一、Traffic Server是什么？ Traffic Server是一个高性能的web代理缓存，适用于ISP、大型CDN缓存应用。它通过将频繁访问的信息缓</description>
    </item>
    
    <item>
      <title>Android 热修复原理实战</title>
      <link>https://rockwinder.github.io/post/android_hot_fix/</link>
      <pubDate>Tue, 30 Jun 2020 15:48:40 +0700</pubDate>
      
      <guid>https://rockwinder.github.io/post/android_hot_fix/</guid>
      <description>代码修复 首先我们定义一个简单的类 public class Text { public static String message(){ return &amp;#34;明天不放假&amp;#34;; } } 然后再Activity中调用 public void onClick(View v) { switch (v.getId()) { case R.id.code: Toast.makeText(MainActivity.this, Text.message(), Toast.LENGTH_LONG).show();</description>
    </item>
    
    <item>
      <title>TCP IP拥塞控制总结</title>
      <link>https://rockwinder.github.io/post/tcpip_flow_control/</link>
      <pubDate>Thu, 25 Jun 2020 20:59:32 +0700</pubDate>
      
      <guid>https://rockwinder.github.io/post/tcpip_flow_control/</guid>
      <description>一.先唠唠嗑 按照计划，今天该出分布式一致性系列的第四篇-Paxos算法，但是又鸽了。 Paxos这个算法要很好地表达写出来并不容易，所以到现在</description>
    </item>
    
    <item>
      <title>如何学习嵌入式linux</title>
      <link>https://rockwinder.github.io/post/how_to_learn_linux_embedded/</link>
      <pubDate>Wed, 24 Jun 2020 15:39:01 +0700</pubDate>
      
      <guid>https://rockwinder.github.io/post/how_to_learn_linux_embedded/</guid>
      <description>第1章 单片机和Linux的区别 1.1 有哪些产品使用单片机或Linux 所有的电子产品，所用技术都可以认为要么是单片机，要么是Linux；GUI方面</description>
    </item>
    
    <item>
      <title>洞悉MySQL底层架构：游走在缓冲与磁盘之间</title>
      <link>https://rockwinder.github.io/post/mysql_underlying_architecture/</link>
      <pubDate>Fri, 05 Jun 2020 14:59:13 +0700</pubDate>
      
      <guid>https://rockwinder.github.io/post/mysql_underlying_architecture/</guid>
      <description>提起MySQL，其实网上已经有一大把教程了，为什么我还要写这篇文章呢，大概是因为网上很多网站都是比较零散，而且描述不够直观，不能系统对MyS</description>
    </item>
    
    <item>
      <title>在macOS上使用GDB的教程</title>
      <link>https://rockwinder.github.io/post/macos_gdb_install/</link>
      <pubDate>Wed, 03 Jun 2020 20:33:07 +0700</pubDate>
      
      <guid>https://rockwinder.github.io/post/macos_gdb_install/</guid>
      <description>背景 在macOS上，用于debug的工具有lldb和gdb. 其中lldb作为一种可复用的组件，参与了大型llvm项目库的构成；同时，lldb</description>
    </item>
    
    <item>
      <title>路由追踪程序Traceroute分析与科普</title>
      <link>https://rockwinder.github.io/post/traceroute/</link>
      <pubDate>Tue, 02 Jun 2020 21:47:31 +0700</pubDate>
      
      <guid>https://rockwinder.github.io/post/traceroute/</guid>
      <description>一、路由追踪程序traceroute/tracert Traceroute是Linux和Mac OS等系统默认提供的路由追踪小程序，Tracer</description>
    </item>
    
    <item>
      <title>研发模式和流程的再思考</title>
      <link>https://rockwinder.github.io/post/%E7%A0%94%E5%8F%91%E6%A8%A1%E5%BC%8F%E5%92%8C%E6%B5%81%E7%A8%8B%E7%9A%84%E5%86%8D%E6%80%9D%E8%80%83/</link>
      <pubDate>Fri, 22 May 2020 14:49:25 +0700</pubDate>
      
      <guid>https://rockwinder.github.io/post/%E7%A0%94%E5%8F%91%E6%A8%A1%E5%BC%8F%E5%92%8C%E6%B5%81%E7%A8%8B%E7%9A%84%E5%86%8D%E6%80%9D%E8%80%83/</guid>
      <description>实用的每日站会和看板 觉得最实用的还是每日站会和任务看板。 每日站会控制在15分钟左右，每个人都必须发言，并且要向所有成员当面汇报三个问题： 你昨</description>
    </item>
    
    <item>
      <title>如何优雅的关闭Go Channel</title>
      <link>https://rockwinder.github.io/post/golang_channel/</link>
      <pubDate>Wed, 20 May 2020 11:35:31 +0700</pubDate>
      
      <guid>https://rockwinder.github.io/post/golang_channel/</guid>
      <description>Channel关闭原则 不要在消费端关闭channel，不要在有多个并行的生产者时对channel执行关闭操作。 也就是说应该只在[唯一的或者最</description>
    </item>
    
    <item>
      <title>理解c/c&#43;&#43;函数指针</title>
      <link>https://rockwinder.github.io/post/c_function_pointer/</link>
      <pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rockwinder.github.io/post/c_function_pointer/</guid>
      <description>函数的类型与地址 我们来看下面这个典型的函数： int foo() { return 5; } 显然foo 是函数名，而int是函数返回值的类型。但是，函数有类型吗？有，函数有自己的</description>
    </item>
    
    <item>
      <title>理解c/c&#43;&#43;多级指针</title>
      <link>https://rockwinder.github.io/post/c_multilevel_pointer/</link>
      <pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rockwinder.github.io/post/c_multilevel_pointer/</guid>
      <description>一、多级指针原理 指针的本质就是一个普通变量，它的值表示的是一个内存地址，这个地址中可能存放了其它变量。那么二级指针其实也是一个普通的变量，这</description>
    </item>
    
    <item>
      <title>聊聊Linux 五种IO模型</title>
      <link>https://rockwinder.github.io/post/linux_io_multiplexing/</link>
      <pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rockwinder.github.io/post/linux_io_multiplexing/</guid>
      <description>那么，在正式开始讲Linux IO模型前，比如：同步IO和异步IO，阻塞IO和非阻塞IO分别是什么，到底有什么区别？不同的人在不同的上下文下给</description>
    </item>
    
    <item>
      <title>tun2socks</title>
      <link>https://rockwinder.github.io/post/tun2socks/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rockwinder.github.io/post/tun2socks/</guid>
      <description>翻墙的几种方式 vpn和各种自定义的vpn；它们是把iOS的ip数据包的内容通过一个tcp转发到vpn服务器，然后在服务器上创建一个tun虚拟</description>
    </item>
    
  </channel>
</rss>
